인터프리터(interpreter)  =>  번역기라고 이해!
인터프리터는 프로그래밍 언어의 소스코드를 바로 번역하여 실행하는 컴퓨터 프로그램 또는 환경
python 코드(사람이 이해하는 언어) => 인터프리터 => 기계어(컴퓨터가 이해하는 언어 / 0과 1로 구성. ex.1000101010101011...)

* 대화형 인터프리터 : ex) 하단의 python console
    장점 : 바로바로 결과가 나오므로 직관적(간단한 예제에서 활용)
    단점 : 코드가 길어질 수록 관리가 어려움

* IDE (Integrated Development Environment) : ex) pycharm
    - 개발을 하면서 사용되는 도구들의 집합
    - 코드 편집: 소스파일에서 코딩 작업을 하고서, 실행시키면 파이썬 인터프리터가 기계어로 번역해 실행하고 화면에 출력
    - 디버깅 : pycharm 디버깅 기능 활용 가능 (고급챕터에서도 한번 더 설명)
        -> 프로그램 실행 도중 break point(중단점) 지점에서 끼어들어 중간 상세과정을 살펴 볼 수 있다
        ->.py 프로그램을 우클릭 후 Debug를 클릭
        -> Debugger 탭에서 현재의 변수에 어떤 값이 저장 되어 있는지 확인 가능
        -> Console 탭에서 대화형으로 디버깅 가능
        -> 다시 실행 할 때는 우측 상단의 디버그 버튼을 누르면 디버깅 모드로 실행 가능

        [디버깅 옵션] : 아래 3가지 옵션 모두 break point(중단점) 이 후의 코드를 실행
        * Step Into(단축키 : F7)
            -> 모든 프로젝트의 코드를 한 줄씩 실행(라이브러리 포함)y Code(단축키 : Alt + Shift + F7)
        * Step Into
            -> 내가 작성한 코드 내에서만 실행(라이브러리는 건너 뜀)
        * Step Over(단축키 : F8)
            -> 현재 열려있는 파일 내에서만 코드를 한 줄씩 실행(함수 호출 코드의 경우 함수 내부로 들어가지 않음)

        [[ 범위 : Step Into > Step Info My Code > Step Over ]]

        * Step Out(Shift + f8)
            -> 현재 실행 되고 있는 메서드를 즉시 빠져나와서 다음 실행 구문으로 이동한다

        * Run to Cursor(Alt + F9)
            -> 에디터의 커서가 가리키고 있는 곳 까지 중간 과정을 무시하고 이동한다.

        * Resume Program(F9)
            -> 다음 break point 로 이동(Run to Cursor 와 비슷)


